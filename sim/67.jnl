# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openStep('G:/pranta vai/ndew serious/substrate.STEP', scaleFromFile=OFF)
mdb.models['Model-1'].ConstrainedSketchFromGeometryFile(geometryFile=mdb.acis, 
    name='substrate')
# Save by 1810151-AjoyKumarSar on 2024_09_15-20.56.31; build 2020 2019_09_13-23.49.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openStep('G:/pranta vai/ndew serious/substrate.STEP', scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='substrate', type=DEFORMABLE_BODY)
del mdb.models['Model-1'].parts['substrate']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-40.0, 25.0), 
    point2=(45.0, -22.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    32.6806640625, 27.285717010498), value=200.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    0.0952835083007813, -0.142856597900391), value=75.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=12.5, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-20.0, 15.0), 
    point2=(25.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    11.7193069458008, 18.9047622680664), value=36.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    21.437744140625, 6.90476226806641), value=36.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='scale', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['scale'].BaseSolidExtrude(depth=1.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=2.54, name='__profile__', 
    sheetSize=101.84, transform=
    mdb.models['Model-1'].parts['scale'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['scale'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['scale'].edges[0], 
    sketchOrientation=RIGHT, origin=(-2.0, -3.0, 1.0)))
mdb.models['Model-1'].parts['scale'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-18.0, -9.525), 
    point2=(18.0, -9.525))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].VerticalDimension(textPoint=(
    -19.7570285797119, -14.5285720825195), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
mdb.models['Model-1'].parts['scale'].PartitionFaceBySketch(faces=
    mdb.models['Model-1'].parts['scale'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), sketch=mdb.models['Model-1'].sketches['__profile__'], sketchUpEdge=
    mdb.models['Model-1'].parts['scale'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['scale'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['scale'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), edges=(mdb.models['Model-1'].parts['scale'].edges[0], ), line=
    mdb.models['Model-1'].parts['scale'].edges[7], sense=REVERSE)
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=10.69, name='__profile__', 
    sheetSize=427.93, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[0], 
    sketchOrientation=RIGHT, origin=(60.0, 15.0, 12.5)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-88.1925, 37.5), 
    point2=(-88.1925, -37.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-74.83, 37.5), 
    point2=(-74.83, -37.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(85.52, 37.5), 
    point2=(85.52, -37.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    -94.8133392333984, -25.9716529846191), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-90.0, -37.5), 
    point2=(-74.83, -37.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], textPoint=(
    -80.6919860839844, 17.5792274475098), value=20.0)
mdb.models['Model-1'].sketches['__profile__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], textPoint=(
    107.535278320313, 14.1364707946777), value=10.0)
mdb.models['Model-1'].parts['Part-1'].PartitionFaceBySketch(faces=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), sketch=mdb.models['Model-1'].sketches['__profile__'], sketchUpEdge=
    mdb.models['Model-1'].parts['Part-1'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Part-1'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), edges=(mdb.models['Model-1'].parts['Part-1'].edges[0], 
    mdb.models['Model-1'].parts['Part-1'].edges[4], 
    mdb.models['Model-1'].parts['Part-1'].edges[7]), line=
    mdb.models['Model-1'].parts['Part-1'].edges[12], sense=REVERSE)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(5.0, 0.0, 
    0.0), axisPoint=(150.0, -22.5, 12.5), instanceList=('Part-1-1', ))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='scale-1', part=
    mdb.models['Model-1'].parts['scale'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(-26.0, 1.0, 86.5))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -43.3981971740723, -4.55666923522949), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], point1=(
    -12.0431518554688, 49.1015281677246))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-40.0, 25.0), point2=(
    160.0, 26.25))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[4], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[2])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[5], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[4])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -22.2253646850586, 9.06855583190918), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    166.110397338867, -4.1423282623291), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[5], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], point1=(
    -39.6471786499023, 32.7881011962891))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], point1=(
    160.253051757813, 30.8364963531494))
mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Part-1']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(43.75, 17.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    34.4909515380859, -4.14285469055176), value=200.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -5.90729522705078, 10.0476188659668), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='substrate', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['substrate'].BaseSolidExtrude(depth=12.5, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=10.09, name='__profile__', 
    sheetSize=403.88, transform=
    mdb.models['Model-1'].parts['substrate'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['substrate'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['substrate'].edges[7], 
    sketchOrientation=RIGHT, origin=(100.0, 5.0, 12.5)))
mdb.models['Model-1'].parts['substrate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-90.81, 12.5), 
    point2=(-90.81, -12.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-73.1525, 12.5), 
    point2=(-73.1525, -12.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(80.72, 12.5), 
    point2=(80.72, -12.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    -92.9155960083008, -17.9175148010254), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    -77.3401489257813, -18.4543685913086), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    89.424560546875, -18.3201560974121), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[9], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3])
mdb.models['Model-1'].parts['substrate'].PartitionFaceBySketch(faces=
    mdb.models['Model-1'].parts['substrate'].faces.getSequenceFromMask((
    '[#10 ]', ), ), sketch=mdb.models['Model-1'].sketches['__profile__'], 
    sketchUpEdge=mdb.models['Model-1'].parts['substrate'].edges[7])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['substrate'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask((
    '[#1 ]', ), ), edges=(mdb.models['Model-1'].parts['substrate'].edges[0], 
    mdb.models['Model-1'].parts['substrate'].edges[4], 
    mdb.models['Model-1'].parts['substrate'].edges[8]), line=
    mdb.models['Model-1'].parts['substrate'].edges[15], sense=REVERSE)
mdb.models['Model-1'].rootAssembly.suppressFeatures(featureNames=('Part-1-1', 
    ))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='substrate-1', 
    part=mdb.models['Model-1'].parts['substrate'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(10.0, 0.0, 
    0.0), axisPoint=(190.0, -7.5, 12.5), instanceList=('substrate-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(40.0, 15.0, -49.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=130.0, axisDirection=(0.0, 
    -10.0, 0.0), axisPoint=(30.0, 5.0, 37.5), instanceList=('scale-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=80.0, axisDirection=(11.570177, 
    0.0, -13.7888), axisPoint=(30.0, 5.0, 37.5), instanceList=('scale-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(0.133022, -0.984808, 0.111619))
del mdb.models['Model-1'].rootAssembly.features['scale-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='scale-1', part=
    mdb.models['Model-1'].parts['scale'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -10.0, 0.0), axisPoint=(16.0, -11.0, 0.0), instanceList=('scale-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(15.0, 13.5, 37.5))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(0.0, 2.5, 0.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=-40.0, axisDirection=(0.0, 
    12.5, 0.0), axisPoint=(30.0, -7.5, 37.5), instanceList=('scale-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(-0.766044, 0.0, -0.642788))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=2.54, name='__profile__', 
    sheetSize=101.82, transform=
    mdb.models['Model-1'].parts['scale'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['scale'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['scale'].edges[7], 
    sketchOrientation=RIGHT, origin=(-2.0, -16.0, 1.0)))
mdb.models['Model-1'].parts['scale'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.16, 31.0), 
    point2=(10.16, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.16, 31.0), 
    point2=(18.0, 31.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(18.0, 31.0), point2=
    (18.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(18.0, -5.0), point2=
    (10.16, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    14.2885046005249, -8.66757583618164), value=4.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
mdb.models['Model-1'].parts['scale'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-1'].parts['scale'].faces[4], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['scale'].edges[7])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(-2.571151, 0.0, 3.064178))
mdb.models['Model-1'].rootAssembly.rotate(angle=80.0, axisDirection=(20.569204, 
    0.0, -24.513422), axisPoint=(30.0, 5.0, 37.5), instanceList=('scale-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(0.133022, -0.984808, 0.111619))
del mdb.models['Model-1'].rootAssembly.features['scale-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='scale-1', part=
    mdb.models['Model-1'].parts['scale'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(18.0, 16.0, 37.5))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -10.0, 0.0), axisPoint=(30.0, 5.0, 37.5), instanceList=('scale-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-80.0, axisDirection=(0.0, 0.0, 
    -32.0), axisPoint=(30.0, 5.0, 37.5), instanceList=('substrate-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=80.0, axisDirection=(0.0, 0.0, 
    -25.0), axisPoint=(37.100652, -26.714835, 37.5), instanceList=(
    'substrate-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(37.100652, -19.214835, 0.0))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=2.54, name='__profile__', 
    sheetSize=101.82, transform=
    mdb.models['Model-1'].parts['scale'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['scale'].faces[10], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['scale'].edges[6], 
    sketchOrientation=RIGHT, origin=(-4.0, 2.0, 1.0)))
mdb.models['Model-1'].parts['scale'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(16.0, 13.0), 
    point2=(4.445, -23.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    -3.62028503417969, -16.6823472976685), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[6])
mdb.models['Model-1'].parts['scale'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-1'].parts['scale'].faces[10], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['scale'].edges[6])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(0.0, 0.0, 7.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=-40.0, axisDirection=(0.0, 
    10.0, 0.0), axisPoint=(67.100652, -24.214835, 37.5), instanceList=(
    'scale-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=80.0, axisDirection=(16.06969, 
    0.0, -19.151111), axisPoint=(67.100652, -14.214835, 37.5), instanceList=(
    'scale-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('scale-1', ), 
    vector=(0.133022, -0.984808, 0.111619))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=2.06, name='__profile__', 
    sheetSize=82.46, transform=
    mdb.models['Model-1'].parts['scale'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['scale'].faces[4], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['scale'].edges[3], 
    sketchOrientation=RIGHT, origin=(-7.5, 2.0, 1.0)))
mdb.models['Model-1'].parts['scale'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(12.5, 13.0), 
    point2=(19.055, -23.175))
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    16.8596601486206, 15.1931591033936), value=5.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[8])
mdb.models['Model-1'].parts['scale'].SolidExtrude(depth=2.0, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['scale'].faces[4], sketchPlaneSide=
    SIDE1, sketchUpEdge=mdb.models['Model-1'].parts['scale'].edges[3])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['scale'].features['Solid extrude-2'].setValues(
    flipExtrudeDirection=True)
mdb.models['Model-1'].parts['scale'].regenerate()
mdb.models['Model-1'].parts['scale'].features['Solid extrude-2'].setValues(
    depth=1.0)
mdb.models['Model-1'].parts['scale'].regenerate()
mdb.models['Model-1'].parts['scale'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].parts['scale'].features['Solid extrude-2']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('scale-1', ), number1=14, 
    number2=1, spacing1=10.0, spacing2=7.23614)
mdb.openStep('G:/pranta vai/model/base.STEP', scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='base', type=DEFORMABLE_BODY)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='base-1', part=
    mdb.models['Model-1'].parts['base'])
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=5.48, name='__profile__', 
    sheetSize=219.31, transform=
    mdb.models['Model-1'].parts['base'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['base'].faces[3], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['base'].edges[11], 
    sketchOrientation=RIGHT, origin=(5.0, -40.0, 0.0)))
mdb.models['Model-1'].parts['base'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(4.11, 40.0), 
    point2=(63.02, -50.69))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    -7.64077568054199, 44.4766998291016), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4])
mdb.models['Model-1'].parts['base'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-1'].parts['base'].faces[3], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['base'].edges[11])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['base'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['base'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['base'].vertices[3], point2=
    mdb.models['Model-1'].parts['base'].vertices[0], point3=
    mdb.models['Model-1'].parts['base'].InterestingPoint(
    mdb.models['Model-1'].parts['base'].edges[9], MIDDLE))
mdb.models['Model-1'].parts['base'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['base'].cells.getSequenceFromMask(('[#2 ]', ), 
    ), point1=mdb.models['Model-1'].parts['base'].InterestingPoint(
    mdb.models['Model-1'].parts['base'].edges[7], MIDDLE), point2=
    mdb.models['Model-1'].parts['base'].InterestingPoint(
    mdb.models['Model-1'].parts['base'].edges[0], MIDDLE), point3=
    mdb.models['Model-1'].parts['base'].InterestingPoint(
    mdb.models['Model-1'].parts['base'].edges[13], MIDDLE))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('base-1', ), vector=
    (47.100652, -31.714835, 50.0))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='base-2', part=
    mdb.models['Model-1'].parts['base'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('base-2', ), vector=
    (227.100652, -31.714835, 50.0))
mdb.models['Model-1'].Material(name='sub')
mdb.models['Model-1'].materials['sub'].Elastic(table=((0.34, 0.3), ))
mdb.models['Model-1'].Material(name='scale')
mdb.models['Model-1'].materials['scale'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].Material(name='ot')
mdb.models['Model-1'].materials['ot'].Elastic(table=((200000.0, 0.3), ))
mdb.openStep('G:/pranta vai/model/indenter.STEP', scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='indenter', type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['indenter'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['indenter'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), point1=mdb.models['Model-1'].parts['indenter'].InterestingPoint(
    mdb.models['Model-1'].parts['indenter'].edges[2], CENTER), point2=
    mdb.models['Model-1'].parts['indenter'].InterestingPoint(
    mdb.models['Model-1'].parts['indenter'].edges[2], MIDDLE), point3=
    mdb.models['Model-1'].parts['indenter'].InterestingPoint(
    mdb.models['Model-1'].parts['indenter'].edges[0], CENTER))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='indenter-1', 
    part=mdb.models['Model-1'].parts['indenter'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('indenter-1', ), 
    vector=(142.784911, 2.800017, 34.807467))
mdb.models['Model-1'].HomogeneousSolidSection(material='sub', name='Section-1', 
    thickness=None)
mdb.models['Model-1'].parts['substrate'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask(
    mask=('[#f ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].HomogeneousSolidSection(material='scale', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].parts['scale'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['scale'].cells.getSequenceFromMask(mask=(
    '[#3 ]', ), )), sectionName='Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].HomogeneousSolidSection(material='ot', name='Section-3', 
    thickness=None)
mdb.models['Model-1'].parts['base'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['base'].cells.getSequenceFromMask(mask=(
    '[#7 ]', ), )), sectionName='Section-3', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['indenter'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['indenter'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )), sectionName='Section-3', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].StaticStep(initialInc=0.01, maxInc=0.1, maxNumInc=500, 
    minInc=1e-165, name='Step-1', previous='Initial', timePeriod=60.0)
mdb.models['Model-1'].steps['Step-1'].setValues(nlgeom=ON)
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].ContactStd(createStepName='Initial', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Initial', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'IntProp-1'), ), stepName='Initial')
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['indenter-1'].faces.getSequenceFromMask(
    mask=('[#24 ]', ), )), name='Int-2', slave=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['substrate-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )), sliding=FINITE, thickness=ON)
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['indenter-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['indenter-1'].edges[2], 
    MIDDLE))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['base-1'].vertices[2])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['base-2'].vertices[2])
mdb.models['Model-1'].RigidBody(name='Constraint-1', pinRegion=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['base-2'].faces.getSequenceFromMask(
    mask=('[#804 ]', ), ), 
    edges=mdb.models['Model-1'].rootAssembly.instances['base-2'].edges.getSequenceFromMask(
    mask=('[#40 ]', ), )), refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[48], )))
mdb.models['Model-1'].RigidBody(name='Constraint-2', pinRegion=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['base-1'].faces.getSequenceFromMask(
    mask=('[#804 ]', ), )), refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[47], )))
mdb.models['Model-1'].RigidBody(name='Constraint-3', pinRegion=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['indenter-1'].faces.getSequenceFromMask(
    mask=('[#50 ]', ), )), refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[46], )))
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 1.0), (60.0, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].ConcentratedForce(cf2=-1000.0, createStepName='Step-1', 
    distributionType=UNIFORM, field='', localCsys=None, name='Load-1', region=
    Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[46], )))
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-1', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['base-1'].faces.getSequenceFromMask(
    mask=('[#200 ]', ), )))
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-2', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['base-2'].faces.getSequenceFromMask(
    mask=('[#200 ]', ), )))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-3', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['indenter-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )), u1=0.0, u2=-30.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].parts['indenter'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=7.5)
mdb.models['Model-1'].parts['indenter'].generateMesh()
mdb.models['Model-1'].parts['base'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['base'].generateMesh()
mdb.models['Model-1'].parts['scale'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.3)
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].parts['substrate'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=10.0)
mdb.models['Model-1'].parts['substrate'].generateMesh()
mdb.models['Model-1'].parts['substrate'].deleteMesh()
mdb.models['Model-1'].parts['substrate'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=8.0)
mdb.models['Model-1'].parts['substrate'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'PE', 'LE', 'U', 'RF', 'CF'))
del mdb.models['Model-1'].historyOutputRequests['H-Output-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=6, numDomains=6, numGPUs=1, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 7.75331E-02 AT NODE 646 INSTANCE SCALE-1-LIN-10-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 5.23776E-02 AT NODE 133 INSTANCE SCALE-1-LIN-11-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '19 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 6920, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 194.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 82.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 9 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.000625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 27, 'iterations': 27, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'There is zero FORCE everywhere in the model based on the default criterion. please check the value of the average FORCE during the current iteration to verify that the FORCE is small enough to be treated as zero. if not, please use the solution controls to reset the criterion for zero FORCE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00015625, 'attempts': 4, 
    'timeIncrement': 0.00015625, 'increment': 1, 'stepTime': 0.00015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 10, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='')
mdb.models['Model-1'].loads['Load-1'].setValues(amplitude='Amp-1', 
    distributionType=UNIFORM, field='')
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (60.0, 1.0)), name=
    'Amp-2', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(amplitude='Amp-2')
mdb.models['Model-1'].materials['sub'].elastic.setValues(table=((10000.0, 0.3), 
    ))
mdb.models['Model-1'].steps['Step-1'].control.setValues(allowPropagation=OFF, 
    resetDefaultValues=OFF, timeIncrementation=(8.0, 10.0, 9.0, 16.0, 10.0, 
    4.0, 12.0, 30.0, 6.0, 3.0, 50.0))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 7.75331E-02 AT NODE 646 INSTANCE SCALE-1-LIN-10-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 5.23776E-02 AT NODE 133 INSTANCE SCALE-1-LIN-11-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '19 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 3516, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 194.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 82.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 26, 'iterations': 26, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0025, 'attempts': 2, 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 19, 'iterations': 19, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.004375, 'attempts': 1, 
    'timeIncrement': 0.001875, 'increment': 2, 'stepTime': 0.004375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00625, 'attempts': 1, 
    'timeIncrement': 0.001875, 'increment': 3, 'stepTime': 0.00625, 'step': 1, 
    'jobName': 'Job-1', 'severe': 11, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00625, 'attempts': ' 1U', 
    'timeIncrement': 0.0028125, 'increment': 4, 'stepTime': 0.00625, 'step': 1, 
    'jobName': 'Job-1', 'severe': 19, 'iterations': 19, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(adaptiveDampingRatio=None, 
    continueDampingFactors=False, stabilizationMagnitude=0.0002, 
    stabilizationMethod=DAMPING_FACTOR)
mdb.models['Model-1'].parts['scale'].deleteMesh()
mdb.models['Model-1'].parts['scale'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=10.0)
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].parts['scale'].deleteMesh()
mdb.models['Model-1'].parts['scale'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['scale'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['scale'].cells.getSequenceFromMask((
    '[#3 ]', ), ), ))
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 0.15357 AT NODE 145 INSTANCE SCALE-1-LIN-12-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 6.10614E-02 AT NODE 2 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '32 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '13 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 1 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'The volume of 210 elements is zero, small, or negative. Check coordinates or node numbering, or modify the mesh seed. In the case of a tetrahedron this error may indicate that all nodes are located very nearly in a plane. The elements have been identified in element set ErrElemVolSmallNegZero.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['scale'].deleteMesh()
mdb.models['Model-1'].parts['scale'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 0.33911 AT NODE 290 INSTANCE SCALE-1-LIN-2-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 3.46890E-02 AT NODE 31 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '34 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '50 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 8 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'The volume of 448 elements is zero, small, or negative. Check coordinates or node numbering, or modify the mesh seed. In the case of a tetrahedron this error may indicate that all nodes are located very nearly in a plane. The elements have been identified in element set ErrElemVolSmallNegZero.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['scale'].deleteMesh()
mdb.models['Model-1'].parts['scale'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.3)
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].parts['substrate'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask((
    '[#f ]', ), ), ))
mdb.models['Model-1'].parts['substrate'].deleteMesh(regions=
    mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask((
    '[#f ]', ), ))
mdb.models['Model-1'].parts['substrate'].setMeshControls(elemShape=TET, 
    regions=mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask(
    ('[#f ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['substrate'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 1.10305E-02 AT NODE 817 INSTANCE SCALE-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 17 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'The volume of 504 elements is zero, small, or negative. Check coordinates or node numbering, or modify the mesh seed. In the case of a tetrahedron this error may indicate that all nodes are located very nearly in a plane. The elements have been identified in element set ErrElemVolSmallNegZero.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['substrate'].deleteMesh()
mdb.models['Model-1'].parts['substrate'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['substrate'].setMeshControls(elemShape=HEX, 
    regions=mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask(
    ('[#f ]', ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['substrate'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask((
    '[#f ]', ), ), ))
mdb.models['Model-1'].parts['substrate'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['substrate'].cells.getSequenceFromMask((
    '[#f ]', ), ), ))
mdb.models['Model-1'].parts['substrate'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 1.43816E-02 AT NODE 3658 INSTANCE SCALE-1-LIN-6-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'The aspect ratio for 14 elements exceeds 100 to 1. The elements have been identified in element set WarnElemAspectRatio.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'The volume of 504 elements is zero, small, or negative. Check coordinates or node numbering, or modify the mesh seed. In the case of a tetrahedron this error may indicate that all nodes are located very nearly in a plane. The elements have been identified in element set ErrElemVolSmallNegZero.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['scale'].setElementType(elemTypes=(ElemType(
    elemCode=SC8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=SC6R, elemLibrary=STANDARD), 
    ElemType(elemCode=UNKNOWN_TET, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['scale'].cells.getSequenceFromMask(('[#3 ]', ), 
    ), ))
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 8.90788E-02 AT NODE 684 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '7448 elements have missing property definitions. The elements have been identified in element set ErrElemMissingSection.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '7448 elements have incorrect property definitions. The elements have been identified in element set WarnElemIncorrectProperty.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST LE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PE IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQ IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST S IS NOT AVAILABLE FOR ELEMENT TYPE SC8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['scale'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['scale'].cells.getSequenceFromMask(('[#3 ]', ), 
    ), ))
mdb.models['Model-1'].parts['scale'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 8.90788E-02 AT NODE 684 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 8100, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 93.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 14, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0025, 'attempts': 2, 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 9, 'iterations': 9, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.005, 'attempts': 1, 
    'timeIncrement': 0.0025, 'increment': 2, 'stepTime': 0.005, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(maxNumInc=200)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 8.90788E-02 AT NODE 684 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 6556, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 93.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 14, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0025, 'attempts': 2, 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 9, 'iterations': 9, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.005, 'attempts': 1, 
    'timeIncrement': 0.0025, 'increment': 2, 'stepTime': 0.005, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00875, 'attempts': 1, 
    'timeIncrement': 0.00375, 'increment': 3, 'stepTime': 0.00875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.014375, 'attempts': 1, 
    'timeIncrement': 0.005625, 'increment': 4, 'stepTime': 0.014375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0228125, 'attempts': 1, 
    'timeIncrement': 0.0084375, 'increment': 5, 'stepTime': 0.0228125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0228125, 'attempts': ' 1U', 
    'timeIncrement': 0.01265625, 'increment': 6, 'stepTime': 0.0228125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 8, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0259765625, 'attempts': 2, 
    'timeIncrement': 0.0031640625, 'increment': 6, 'stepTime': 0.0259765625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.03072265625, 'attempts': 1, 
    'timeIncrement': 0.00474609375, 'increment': 7, 'stepTime': 0.03072265625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.037841796875, 'attempts': 1, 
    'timeIncrement': 0.007119140625, 'increment': 8, 
    'stepTime': 0.037841796875, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0485205078125, 
    'attempts': 1, 'timeIncrement': 0.0106787109375, 'increment': 9, 
    'stepTime': 0.0485205078125, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.06453857421875, 
    'attempts': 1, 'timeIncrement': 0.01601806640625, 'increment': 10, 
    'stepTime': 0.06453857421875, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.088565673828125, 
    'attempts': 1, 'timeIncrement': 0.024027099609375, 'increment': 11, 
    'stepTime': 0.088565673828125, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.124606323242188, 
    'attempts': 1, 'timeIncrement': 0.0360406494140625, 'increment': 12, 
    'stepTime': 0.124606323242188, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178667297363281, 
    'attempts': 1, 'timeIncrement': 0.0540609741210938, 'increment': 13, 
    'stepTime': 0.178667297363281, 'step': 1, 'jobName': 'Job-1', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178667297363281, 
    'attempts': ' 1U', 'timeIncrement': 0.0810914611816406, 'increment': 14, 
    'stepTime': 0.178667297363281, 'step': 1, 'jobName': 'Job-1', 'severe': 20, 
    'iterations': 21, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198940162658691, 
    'attempts': 2, 'timeIncrement': 0.0202728652954102, 'increment': 14, 
    'stepTime': 0.198940162658691, 'step': 1, 'jobName': 'Job-1', 'severe': 6, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198940162658691, 
    'attempts': ' 1U', 'timeIncrement': 0.0304092979431152, 'increment': 15, 
    'stepTime': 0.198940162658691, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198940162658691, 
    'attempts': ' 2U', 'timeIncrement': 0.00760232448577881, 'increment': 15, 
    'stepTime': 0.198940162658691, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198940162658691, 
    'attempts': ' 3U', 'timeIncrement': 0.0019005811214447, 'increment': 15, 
    'stepTime': 0.198940162658691, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198940162658691, 
    'attempts': ' 4U', 'timeIncrement': 0.000950290560722351, 'increment': 15, 
    'stepTime': 0.198940162658691, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 12})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.199415307939053, 
    'attempts': 5, 'timeIncrement': 0.000475145280361176, 'increment': 15, 
    'stepTime': 0.199415307939053, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.199890453219414, 
    'attempts': 1, 'timeIncrement': 0.000475145280361176, 'increment': 16, 
    'stepTime': 0.199890453219414, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200246812179685, 
    'attempts': 1, 'timeIncrement': 0.000356358960270882, 'increment': 17, 
    'stepTime': 0.200246812179685, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200603171139956, 
    'attempts': 1, 'timeIncrement': 0.000356358960270882, 'increment': 18, 
    'stepTime': 0.200603171139956, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.201137709580362, 
    'attempts': 1, 'timeIncrement': 0.000534538440406323, 'increment': 19, 
    'stepTime': 0.201137709580362, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.201939517240971, 
    'attempts': 1, 'timeIncrement': 0.000801807660609484, 'increment': 20, 
    'stepTime': 0.201939517240971, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.202741324901581, 
    'attempts': 1, 'timeIncrement': 0.000801807660609484, 'increment': 21, 
    'stepTime': 0.202741324901581, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.20354313256219, 
    'attempts': 1, 'timeIncrement': 0.000801807660609484, 'increment': 22, 
    'stepTime': 0.20354313256219, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.204745844053105, 
    'attempts': 1, 'timeIncrement': 0.00120271149091423, 'increment': 23, 
    'stepTime': 0.204745844053105, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.205948555544019, 
    'attempts': 1, 'timeIncrement': 0.00120271149091423, 'increment': 24, 
    'stepTime': 0.205948555544019, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.207151267034933, 
    'attempts': 1, 'timeIncrement': 0.00120271149091423, 'increment': 25, 
    'stepTime': 0.207151267034933, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.207151267034933, 
    'attempts': ' 1U', 'timeIncrement': 0.00120271149091423, 'increment': 26, 
    'stepTime': 0.207151267034933, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.20775262278039, 
    'attempts': 2, 'timeIncrement': 0.000601355745457113, 'increment': 26, 
    'stepTime': 0.20775262278039, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.208353978525847, 
    'attempts': 1, 'timeIncrement': 0.000601355745457113, 'increment': 27, 
    'stepTime': 0.208353978525847, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.208955334271304, 
    'attempts': 1, 'timeIncrement': 0.000601355745457113, 'increment': 28, 
    'stepTime': 0.208955334271304, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.20985736788949, 
    'attempts': 1, 'timeIncrement': 0.000902033618185669, 'increment': 29, 
    'stepTime': 0.20985736788949, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.210759401507676, 
    'attempts': 1, 'timeIncrement': 0.000902033618185669, 'increment': 30, 
    'stepTime': 0.210759401507676, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.211661435125861, 
    'attempts': 1, 'timeIncrement': 0.000902033618185669, 'increment': 31, 
    'stepTime': 0.211661435125861, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.212563468744047, 
    'attempts': 1, 'timeIncrement': 0.000902033618185669, 'increment': 32, 
    'stepTime': 0.212563468744047, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.213465502362233, 
    'attempts': 1, 'timeIncrement': 0.000902033618185669, 'increment': 33, 
    'stepTime': 0.213465502362233, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.213465502362233, 
    'attempts': ' 1U', 'timeIncrement': 0.0013530504272785, 'increment': 34, 
    'stepTime': 0.213465502362233, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.214142027575872, 
    'attempts': 2, 'timeIncrement': 0.000676525213639252, 'increment': 34, 
    'stepTime': 0.214142027575872, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.214818552789511, 
    'attempts': 1, 'timeIncrement': 0.000676525213639252, 'increment': 35, 
    'stepTime': 0.214818552789511, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.21549507800315, 
    'attempts': 1, 'timeIncrement': 0.000676525213639252, 'increment': 36, 
    'stepTime': 0.21549507800315, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.216509865823609, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 37, 
    'stepTime': 0.216509865823609, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.217524653644068, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 38, 
    'stepTime': 0.217524653644068, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.218539441464527, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 39, 
    'stepTime': 0.218539441464527, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.219554229284986, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 40, 
    'stepTime': 0.219554229284986, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.220569017105445, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 41, 
    'stepTime': 0.220569017105445, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.221583804925904, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 42, 
    'stepTime': 0.221583804925904, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.222598592746363, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 43, 
    'stepTime': 0.222598592746363, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.223613380566822, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 44, 
    'stepTime': 0.223613380566822, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.22462816838728, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 45, 
    'stepTime': 0.22462816838728, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.225642956207739, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 46, 
    'stepTime': 0.225642956207739, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.226657744028198, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 47, 
    'stepTime': 0.226657744028198, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.227672531848657, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 48, 
    'stepTime': 0.227672531848657, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.228687319669116, 
    'attempts': 1, 'timeIncrement': 0.00101478782045888, 'increment': 49, 
    'stepTime': 0.228687319669116, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.22944841053446, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 50, 
    'stepTime': 0.22944841053446, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 50, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.230209501399804, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 51, 
    'stepTime': 0.230209501399804, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 51, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.230970592265148, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 52, 
    'stepTime': 0.230970592265148, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 52, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.231731683130493, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 53, 
    'stepTime': 0.231731683130493, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 53, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.232492773995837, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 54, 
    'stepTime': 0.232492773995837, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 54, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.233253864861181, 
    'attempts': 1, 'timeIncrement': 0.000761090865344159, 'increment': 55, 
    'stepTime': 0.233253864861181, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 55, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].materials['sub'].elastic.setValues(table=((1.5, 0.3), ))
mdb.models['Model-1'].materials['scale'].elastic.setValues(table=((2800.0, 
    0.3), ))
mdb.models['Model-1'].materials['sub'].elastic.setValues(table=((1.5, 0.42), ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 8.90788E-02 AT NODE 684 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 10016, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 214.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 93.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-1', 'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.4178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.5178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.6178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.7178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 12, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.8178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.9178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 1.0178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.1178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 16, 'stepTime': 1.1178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 9, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 17, 'stepTime': 1.2178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 18, 'stepTime': 1.3178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 6, 'iterations': 7, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.3178125, 'attempts': ' 1U', 
    'timeIncrement': 0.1, 'increment': 19, 'stepTime': 1.3178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 15, 'iterations': 15, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.3428125, 'attempts': 2, 
    'timeIncrement': 0.025, 'increment': 19, 'stepTime': 1.3428125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.3803125, 'attempts': 1, 
    'timeIncrement': 0.0375, 'increment': 20, 'stepTime': 1.3803125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.4365625, 'attempts': 1, 
    'timeIncrement': 0.05625, 'increment': 21, 'stepTime': 1.4365625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.5209375, 'attempts': 1, 
    'timeIncrement': 0.084375, 'increment': 22, 'stepTime': 1.5209375, 
    'step': 1, 'jobName': 'Job-1', 'severe': 6, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.6209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 23, 'stepTime': 1.6209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 6, 'iterations': 7, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.7209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 24, 'stepTime': 1.7209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 10, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.8209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 25, 'stepTime': 1.8209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 11, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.9209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 26, 'stepTime': 1.9209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 10, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.0209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 27, 'stepTime': 2.0209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.1209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 28, 'stepTime': 2.1209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 9, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.2209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 29, 'stepTime': 2.2209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.3209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 30, 'stepTime': 2.3209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 9, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.4209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 31, 'stepTime': 2.4209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 13, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.5209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 32, 'stepTime': 2.5209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.6209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 33, 'stepTime': 2.6209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.7209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 34, 'stepTime': 2.7209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 9, 'iterations': 10, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.8209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 35, 'stepTime': 2.8209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.9209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 36, 'stepTime': 2.9209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 6, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.0209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 37, 'stepTime': 3.0209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 7, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.1209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 38, 'stepTime': 3.1209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.2209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 39, 'stepTime': 3.2209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3209375, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 40, 'stepTime': 3.3209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3209375, 'attempts': ' 1U', 
    'timeIncrement': 0.1, 'increment': 41, 'stepTime': 3.3209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 47, 'iterations': 47, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3209375, 'attempts': ' 2U', 
    'timeIncrement': 0.025, 'increment': 41, 'stepTime': 3.3209375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 8, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3271875, 'attempts': 3, 
    'timeIncrement': 0.00625, 'increment': 41, 'stepTime': 3.3271875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3365625, 'attempts': 1, 
    'timeIncrement': 0.009375, 'increment': 42, 'stepTime': 3.3365625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.350625, 'attempts': 1, 
    'timeIncrement': 0.0140625, 'increment': 43, 'stepTime': 3.350625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 10, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.350625, 'attempts': ' 1U', 
    'timeIncrement': 0.02109375, 'increment': 44, 'stepTime': 3.350625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 9, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3558984375, 'attempts': 2, 
    'timeIncrement': 0.0052734375, 'increment': 44, 'stepTime': 3.3558984375, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3558984375, 
    'attempts': ' 1U', 'timeIncrement': 0.00791015625, 'increment': 45, 
    'stepTime': 3.3558984375, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3578759765625, 
    'attempts': 2, 'timeIncrement': 0.0019775390625, 'increment': 45, 
    'stepTime': 3.3578759765625, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.36084228515625, 
    'attempts': 1, 'timeIncrement': 0.00296630859375, 'increment': 46, 
    'stepTime': 3.36084228515625, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.36529174804688, 
    'attempts': 1, 'timeIncrement': 0.004449462890625, 'increment': 47, 
    'stepTime': 3.36529174804688, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37196594238281, 
    'attempts': 1, 'timeIncrement': 0.0066741943359375, 'increment': 48, 
    'stepTime': 3.37196594238281, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37196594238281, 
    'attempts': ' 1U', 'timeIncrement': 0.0100112915039063, 'increment': 49, 
    'stepTime': 3.37196594238281, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37446876525879, 
    'attempts': 2, 'timeIncrement': 0.00250282287597656, 'increment': 49, 
    'stepTime': 3.37446876525879, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37822299957276, 
    'attempts': 1, 'timeIncrement': 0.00375423431396484, 'increment': 50, 
    'stepTime': 3.37822299957276, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 50, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37822299957276, 
    'attempts': ' 1U', 'timeIncrement': 0.00563135147094727, 'increment': 51, 
    'stepTime': 3.37822299957276, 'step': 1, 'jobName': 'Job-1', 'severe': 12, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37963083744049, 
    'attempts': 2, 'timeIncrement': 0.00140783786773682, 'increment': 51, 
    'stepTime': 3.37963083744049, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 51, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3817425942421, 
    'attempts': 1, 'timeIncrement': 0.00211175680160522, 'increment': 52, 
    'stepTime': 3.3817425942421, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 52, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.38491022944451, 
    'attempts': 1, 'timeIncrement': 0.00316763520240784, 'increment': 53, 
    'stepTime': 3.38491022944451, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 53, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.38966168224812, 
    'attempts': 1, 'timeIncrement': 0.00475145280361176, 'increment': 54, 
    'stepTime': 3.38966168224812, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 54, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.39441313505173, 
    'attempts': 1, 'timeIncrement': 0.00475145280361176, 'increment': 55, 
    'stepTime': 3.39441313505173, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 55, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.39441313505173, 
    'attempts': ' 1U', 'timeIncrement': 0.00475145280361176, 'increment': 56, 
    'stepTime': 3.39441313505173, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 15, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.39678886145354, 
    'attempts': 2, 'timeIncrement': 0.00237572640180588, 'increment': 56, 
    'stepTime': 3.39678886145354, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 56, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.39916458785534, 
    'attempts': 1, 'timeIncrement': 0.00237572640180588, 'increment': 57, 
    'stepTime': 3.39916458785534, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 57, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.40154031425715, 
    'attempts': 1, 'timeIncrement': 0.00237572640180588, 'increment': 58, 
    'stepTime': 3.40154031425715, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 58, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.40391604065895, 
    'attempts': 1, 'timeIncrement': 0.00237572640180588, 'increment': 59, 
    'stepTime': 3.40391604065895, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 59, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.40629176706076, 
    'attempts': 1, 'timeIncrement': 0.00237572640180588, 'increment': 60, 
    'stepTime': 3.40629176706076, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 60, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.40866749346257, 
    'attempts': 1, 'timeIncrement': 0.00237572640180588, 'increment': 61, 
    'stepTime': 3.40866749346257, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 61, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.41223108306527, 
    'attempts': 1, 'timeIncrement': 0.00356358960270882, 'increment': 62, 
    'stepTime': 3.41223108306527, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 62, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.41223108306527, 
    'attempts': ' 1U', 'timeIncrement': 0.00534538440406323, 'increment': 63, 
    'stepTime': 3.41223108306527, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.41490377526731, 
    'attempts': 2, 'timeIncrement': 0.00267269220203161, 'increment': 63, 
    'stepTime': 3.41490377526731, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 63, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.41757646746934, 
    'attempts': 1, 'timeIncrement': 0.00267269220203161, 'increment': 64, 
    'stepTime': 3.41757646746934, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 64, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.42024915967137, 
    'attempts': 1, 'timeIncrement': 0.00267269220203161, 'increment': 65, 
    'stepTime': 3.42024915967137, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 65, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4229218518734, 
    'attempts': 1, 'timeIncrement': 0.00267269220203161, 'increment': 66, 
    'stepTime': 3.4229218518734, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 66, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.42693089017645, 
    'attempts': 1, 'timeIncrement': 0.00400903830304742, 'increment': 67, 
    'stepTime': 3.42693089017645, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 8})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 67, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4309399284795, 
    'attempts': 1, 'timeIncrement': 0.00400903830304742, 'increment': 68, 
    'stepTime': 3.4309399284795, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 68, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.43494896678254, 
    'attempts': 1, 'timeIncrement': 0.00400903830304742, 'increment': 69, 
    'stepTime': 3.43494896678254, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 69, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.43895800508559, 
    'attempts': 1, 'timeIncrement': 0.00400903830304742, 'increment': 70, 
    'stepTime': 3.43895800508559, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 70, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.44196478381288, 
    'attempts': 1, 'timeIncrement': 0.00300677872728556, 'increment': 71, 
    'stepTime': 3.44196478381288, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 71, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.44497156254016, 
    'attempts': 1, 'timeIncrement': 0.00300677872728556, 'increment': 72, 
    'stepTime': 3.44497156254016, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 72, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.44797834126745, 
    'attempts': 1, 'timeIncrement': 0.00300677872728556, 'increment': 73, 
    'stepTime': 3.44797834126745, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 73, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.45098511999473, 
    'attempts': 1, 'timeIncrement': 0.00300677872728556, 'increment': 74, 
    'stepTime': 3.45098511999473, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 74, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.45549528808566, 
    'attempts': 1, 'timeIncrement': 0.00451016809092835, 'increment': 75, 
    'stepTime': 3.45549528808566, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 75, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.46000545617659, 
    'attempts': 1, 'timeIncrement': 0.00451016809092835, 'increment': 76, 
    'stepTime': 3.46000545617659, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 76, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.46451562426752, 
    'attempts': 1, 'timeIncrement': 0.00451016809092835, 'increment': 77, 
    'stepTime': 3.46451562426752, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 77, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.46902579235845, 
    'attempts': 1, 'timeIncrement': 0.00451016809092835, 'increment': 78, 
    'stepTime': 3.46902579235845, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 78, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.47353596044937, 
    'attempts': 1, 'timeIncrement': 0.00451016809092835, 'increment': 79, 
    'stepTime': 3.47353596044937, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 79, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4780461285403, 
    'attempts': 1, 'timeIncrement': 0.00451016809092835, 'increment': 80, 
    'stepTime': 3.4780461285403, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 80, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4780461285403, 
    'attempts': ' 1U', 'timeIncrement': 0.00676525213639252, 'increment': 81, 
    'stepTime': 3.4780461285403, 'step': 1, 'jobName': 'Job-1', 'severe': 17, 
    'iterations': 17, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4797374415744, 
    'attempts': 2, 'timeIncrement': 0.00169131303409813, 'increment': 81, 
    'stepTime': 3.4797374415744, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 81, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.48227441112555, 
    'attempts': 1, 'timeIncrement': 0.00253696955114719, 'increment': 82, 
    'stepTime': 3.48227441112555, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 82, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4848113806767, 
    'attempts': 1, 'timeIncrement': 0.00253696955114719, 'increment': 83, 
    'stepTime': 3.4848113806767, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 83, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.48734835022784, 
    'attempts': 1, 'timeIncrement': 0.00253696955114719, 'increment': 84, 
    'stepTime': 3.48734835022784, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 84, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.49115380455456, 
    'attempts': 1, 'timeIncrement': 0.00380545432672079, 'increment': 85, 
    'stepTime': 3.49115380455456, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 85, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.49686198604464, 
    'attempts': 1, 'timeIncrement': 0.00570818149008119, 'increment': 86, 
    'stepTime': 3.49686198604464, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 86, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.50542425827977, 
    'attempts': 1, 'timeIncrement': 0.00856227223512178, 'increment': 87, 
    'stepTime': 3.50542425827977, 'step': 1, 'jobName': 'Job-1', 'severe': 6, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 87, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.51826766663245, 
    'attempts': 1, 'timeIncrement': 0.0128434083526827, 'increment': 88, 
    'stepTime': 3.51826766663245, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 88, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].SelfContactStd(createStepName='Step-1', 
    interactionProperty='IntProp-1', name='Int-3', surface=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['scale-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-12-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-13-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-14-1'].faces.getSequenceFromMask(
    mask=('[#77f ]', ), )), thickness=ON)
mdb.models['Model-1'].steps['Step-1'].setValues(maxNumInc=100, minInc=1e-15)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE RATIO OF THE MAXIMUM INCREMENTAL ADJUSTMENT TO THE AVERAGE CHARACTERISTIC LENGTH IS 8.90788E-02 AT NODE 684 INSTANCE SCALE-1-LIN-3-1 ON THE SURFACE PAIR (General_Contact_Faces,General_Contact_Faces). MAGNITUDES OF STRAIN-FREE NODAL POSITION ADJUSTMENTS CAN BE OBSERVED IN CONTOUR PLOTS AND SYMBOL PLOTS OF THE "STRAINFREE" OUTPUT VARIABLE AT TIME=0.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have been adjusted. The nodes have been identified in node set WarnNodeAdjust.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 18124, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 313.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 182.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.4178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.5178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.6178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.7178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 6, 'iterations': 7, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.8178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 10, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.9178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 1.0178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.1178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 16, 'stepTime': 1.1178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 12, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 17, 'stepTime': 1.2178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
# Save by 1810151-AjoyKumarSar on 2024_09_16-00.10.28; build 2020 2019_09_13-23.49.31 163176
# Save by 1810151-AjoyKumarSar on 2024_09_16-00.10.29; build 2020 2019_09_13-23.49.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', master=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['scale-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-12-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-13-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['scale-1-lin-14-1'].faces.getSequenceFromMask(
    mask=('[#331 ]', ), )), name='Int-4', slave=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['substrate-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )), sliding=FINITE, thickness=ON)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THERE ARE 114 FACETS THAT ARE FOUND TO BE FACING IN THE WRONG DIRECTION WITH RESPECT TO THE MASTER SURFACE FOR THE CONTACT PAIR (ASSEMBLY__PICKEDSURF127,ASSEMBLY__PICKEDSURF126).  PLEASE CHECK THE ORIENTATION OF THE SURFACES RELATIVE TO EACH OTHER.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP SINCE ALLSDTOL IS EQUAL TO ZERO.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2 nodes associated with rigid bodies have boundary conditions prescribed at nodes other than the reference node. These boundary conditions will be transferred to the associated rigid body reference node.The reference nodes and the dependent nodes have been identified in node set WarnNodeOverconBoundRB.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'G:\\pranta vai\\ndew serious\\sim\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-MKMQ35G', 'handle': 16748, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 319.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16329.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 183.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 9, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-1', 'severe': 3, 'iterations': 6, 'phase': STANDARD_PHASE, 
    'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.10125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 6, 'stepTime': 0.10125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.151875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 7, 'stepTime': 0.151875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2278125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 8, 'stepTime': 0.2278125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 3, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.3278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.3278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.4278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.4278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 17, 'iterations': 19, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.5278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.5278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.6278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.6278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.7278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.7278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.8278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.8278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 12, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.9278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 0.9278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 5, 'iterations': 12, 'phase': STANDARD_PHASE, 
    'equilibrium': 7})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.9278125, 'attempts': ' 1U', 
    'timeIncrement': 0.1, 'increment': 16, 'stepTime': 0.9278125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 11, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.9528125, 'attempts': 2, 
    'timeIncrement': 0.025, 'increment': 16, 'stepTime': 0.9528125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.9778125, 'attempts': 1, 
    'timeIncrement': 0.025, 'increment': 17, 'stepTime': 0.9778125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0153125, 'attempts': 1, 
    'timeIncrement': 0.0375, 'increment': 18, 'stepTime': 1.0153125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0715625, 'attempts': 1, 
    'timeIncrement': 0.05625, 'increment': 19, 'stepTime': 1.0715625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 6, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.1559375, 'attempts': 1, 
    'timeIncrement': 0.084375, 'increment': 20, 'stepTime': 1.1559375, 
    'step': 1, 'jobName': 'Job-1', 'severe': 8, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.1559375, 'attempts': ' 1U', 
    'timeIncrement': 0.1, 'increment': 21, 'stepTime': 1.1559375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 16, 'iterations': 16, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.1809375, 'attempts': 2, 
    'timeIncrement': 0.025, 'increment': 21, 'stepTime': 1.1809375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2184375, 'attempts': 1, 
    'timeIncrement': 0.0375, 'increment': 22, 'stepTime': 1.2184375, 'step': 1, 
    'jobName': 'Job-1', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2184375, 'attempts': ' 1U', 
    'timeIncrement': 0.05625, 'increment': 23, 'stepTime': 1.2184375, 
    'step': 1, 'jobName': 'Job-1', 'severe': 11, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2325, 'attempts': 2, 
    'timeIncrement': 0.0140625, 'increment': 23, 'stepTime': 1.2325, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.25359375, 'attempts': 1, 
    'timeIncrement': 0.02109375, 'increment': 24, 'stepTime': 1.25359375, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.25359375, 'attempts': ' 1U', 
    'timeIncrement': 0.031640625, 'increment': 25, 'stepTime': 1.25359375, 
    'step': 1, 'jobName': 'Job-1', 'severe': 10, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.26150390625, 'attempts': 2, 
    'timeIncrement': 0.00791015625, 'increment': 25, 'stepTime': 1.26150390625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.273369140625, 'attempts': 1, 
    'timeIncrement': 0.011865234375, 'increment': 26, 
    'stepTime': 1.273369140625, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2911669921875, 
    'attempts': 1, 'timeIncrement': 0.0177978515625, 'increment': 27, 
    'stepTime': 1.2911669921875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.31786376953125, 
    'attempts': 1, 'timeIncrement': 0.02669677734375, 'increment': 28, 
    'stepTime': 1.31786376953125, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.35790893554687, 
    'attempts': 1, 'timeIncrement': 0.040045166015625, 'increment': 29, 
    'stepTime': 1.35790893554687, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.35790893554687, 
    'attempts': ' 1U', 'timeIncrement': 0.0600677490234375, 'increment': 30, 
    'stepTime': 1.35790893554687, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.37292587280273, 
    'attempts': 2, 'timeIncrement': 0.0150169372558594, 'increment': 30, 
    'stepTime': 1.37292587280273, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.39545127868652, 
    'attempts': 1, 'timeIncrement': 0.0225254058837891, 'increment': 31, 
    'stepTime': 1.39545127868652, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.42923938751221, 
    'attempts': 1, 'timeIncrement': 0.0337881088256836, 'increment': 32, 
    'stepTime': 1.42923938751221, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.47992155075073, 
    'attempts': 1, 'timeIncrement': 0.0506821632385254, 'increment': 33, 
    'stepTime': 1.47992155075073, 'step': 1, 'jobName': 'Job-1', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.55594479560852, 
    'attempts': 1, 'timeIncrement': 0.0760232448577881, 'increment': 34, 
    'stepTime': 1.55594479560852, 'step': 1, 'jobName': 'Job-1', 'severe': 20, 
    'iterations': 22, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 3 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 40 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'EXCESSIVE DISTORTION AT A TOTAL OF 92 INTEGRATION POINTS IN SOLID (CONTINUUM) ELEMENTS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.55594479560852, 
    'attempts': ' 1U', 'timeIncrement': 0.1, 'increment': 35, 
    'stepTime': 1.55594479560852, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.58094479560852, 
    'attempts': 2, 'timeIncrement': 0.025, 'increment': 35, 
    'stepTime': 1.58094479560852, 'step': 1, 'jobName': 'Job-1', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.61844479560852, 
    'attempts': 1, 'timeIncrement': 0.0375, 'increment': 36, 
    'stepTime': 1.61844479560852, 'step': 1, 'jobName': 'Job-1', 'severe': 14, 
    'iterations': 14, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.67469479560852, 
    'attempts': 1, 'timeIncrement': 0.05625, 'increment': 37, 
    'stepTime': 1.67469479560852, 'step': 1, 'jobName': 'Job-1', 'severe': 15, 
    'iterations': 16, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.67469479560852, 
    'attempts': ' 1U', 'timeIncrement': 0.084375, 'increment': 38, 
    'stepTime': 1.67469479560852, 'step': 1, 'jobName': 'Job-1', 'severe': 13, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.69578854560852, 
    'attempts': 2, 'timeIncrement': 0.02109375, 'increment': 38, 
    'stepTime': 1.69578854560852, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 1 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.69578854560852, 
    'attempts': ' 1U', 'timeIncrement': 0.031640625, 'increment': 39, 
    'stepTime': 1.69578854560852, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.70369870185852, 
    'attempts': 2, 'timeIncrement': 0.00791015625, 'increment': 39, 
    'stepTime': 1.70369870185852, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.70369870185852, 
    'attempts': ' 1U', 'timeIncrement': 0.011865234375, 'increment': 40, 
    'stepTime': 1.70369870185852, 'step': 1, 'jobName': 'Job-1', 'severe': 17, 
    'iterations': 17, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.70666501045227, 
    'attempts': 2, 'timeIncrement': 0.00296630859375, 'increment': 40, 
    'stepTime': 1.70666501045227, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.7111144733429, 
    'attempts': 1, 'timeIncrement': 0.004449462890625, 'increment': 41, 
    'stepTime': 1.7111144733429, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.7111144733429, 
    'attempts': ' 1U', 'timeIncrement': 0.0066741943359375, 'increment': 42, 
    'stepTime': 1.7111144733429, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.71278302192688, 
    'attempts': 2, 'timeIncrement': 0.00166854858398438, 'increment': 42, 
    'stepTime': 1.71278302192688, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.71528584480286, 
    'attempts': 1, 'timeIncrement': 0.00250282287597656, 'increment': 43, 
    'stepTime': 1.71528584480286, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.71904007911682, 
    'attempts': 1, 'timeIncrement': 0.00375423431396484, 'increment': 44, 
    'stepTime': 1.71904007911682, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.72467143058777, 
    'attempts': 1, 'timeIncrement': 0.00563135147094727, 'increment': 45, 
    'stepTime': 1.72467143058777, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.73311845779419, 
    'attempts': 1, 'timeIncrement': 0.0084470272064209, 'increment': 46, 
    'stepTime': 1.73311845779419, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 46, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.74578899860382, 
    'attempts': 1, 'timeIncrement': 0.0126705408096313, 'increment': 47, 
    'stepTime': 1.74578899860382, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 47, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.76479480981827, 
    'attempts': 1, 'timeIncrement': 0.019005811214447, 'increment': 48, 
    'stepTime': 1.76479480981827, 'step': 1, 'jobName': 'Job-1', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 48, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.79330352663994, 
    'attempts': 1, 'timeIncrement': 0.0285087168216705, 'increment': 49, 
    'stepTime': 1.79330352663994, 'step': 1, 'jobName': 'Job-1', 'severe': 9, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 49, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.83606660187244, 
    'attempts': 1, 'timeIncrement': 0.0427630752325058, 'increment': 50, 
    'stepTime': 1.83606660187244, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 50, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.9002112147212, 
    'attempts': 1, 'timeIncrement': 0.0641446128487587, 'increment': 51, 
    'stepTime': 1.9002112147212, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 51, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.9002112147212, 
    'attempts': ' 1U', 'timeIncrement': 0.0962169192731381, 'increment': 52, 
    'stepTime': 1.9002112147212, 'step': 1, 'jobName': 'Job-1', 'severe': 10, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.92426544453949, 
    'attempts': 2, 'timeIncrement': 0.0240542298182845, 'increment': 52, 
    'stepTime': 1.92426544453949, 'step': 1, 'jobName': 'Job-1', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 52, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.96034678926691, 
    'attempts': 1, 'timeIncrement': 0.0360813447274268, 'increment': 53, 
    'stepTime': 1.96034678926691, 'step': 1, 'jobName': 'Job-1', 'severe': 10, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 53, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.96034678926691, 
    'attempts': ' 1U', 'timeIncrement': 0.0541220170911402, 'increment': 54, 
    'stepTime': 1.96034678926691, 'step': 1, 'jobName': 'Job-1', 'severe': 15, 
    'iterations': 15, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.9738772935397, 
    'attempts': 2, 'timeIncrement': 0.013530504272785, 'increment': 54, 
    'stepTime': 1.9738772935397, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 54, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.99417304994888, 
    'attempts': 1, 'timeIncrement': 0.0202957564091776, 'increment': 55, 
    'stepTime': 1.99417304994888, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 55, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.02461668456264, 
    'attempts': 1, 'timeIncrement': 0.0304436346137663, 'increment': 56, 
    'stepTime': 2.02461668456264, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 56, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.02461668456264, 
    'attempts': ' 1U', 'timeIncrement': 0.0456654519206495, 'increment': 57, 
    'stepTime': 2.02461668456264, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.03603304754281, 
    'attempts': 2, 'timeIncrement': 0.0114163629801624, 'increment': 57, 
    'stepTime': 2.03603304754281, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 57, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.05315759201305, 
    'attempts': 1, 'timeIncrement': 0.0171245444702436, 'increment': 58, 
    'stepTime': 2.05315759201305, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 58, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.07884440871841, 
    'attempts': 1, 'timeIncrement': 0.0256868167053653, 'increment': 59, 
    'stepTime': 2.07884440871841, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 59, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.07884440871841, 
    'attempts': ' 1U', 'timeIncrement': 0.038530225058048, 'increment': 60, 
    'stepTime': 2.07884440871841, 'step': 1, 'jobName': 'Job-1', 'severe': 18, 
    'iterations': 18, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.08847696498293, 
    'attempts': 2, 'timeIncrement': 0.009632556264512, 'increment': 60, 
    'stepTime': 2.08847696498293, 'step': 1, 'jobName': 'Job-1', 'severe': 6, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 60, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.10292579937969, 
    'attempts': 1, 'timeIncrement': 0.014448834396768, 'increment': 61, 
    'stepTime': 2.10292579937969, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 61, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.12459905097485, 
    'attempts': 1, 'timeIncrement': 0.021673251595152, 'increment': 62, 
    'stepTime': 2.12459905097485, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 62, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.12459905097485, 
    'attempts': ' 1U', 'timeIncrement': 0.032509877392728, 'increment': 63, 
    'stepTime': 2.12459905097485, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.13272652032303, 
    'attempts': 2, 'timeIncrement': 0.008127469348182, 'increment': 63, 
    'stepTime': 2.13272652032303, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 63, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.1449177243453, 
    'attempts': 1, 'timeIncrement': 0.012191204022273, 'increment': 64, 
    'stepTime': 2.1449177243453, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 64, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.1449177243453, 
    'attempts': ' 1U', 'timeIncrement': 0.0182868060334095, 'increment': 65, 
    'stepTime': 2.1449177243453, 'step': 1, 'jobName': 'Job-1', 'severe': 15, 
    'iterations': 15, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.14948942585365, 
    'attempts': 2, 'timeIncrement': 0.00457170150835238, 'increment': 65, 
    'stepTime': 2.14948942585365, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 65, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.15634697811618, 
    'attempts': 1, 'timeIncrement': 0.00685755226252857, 'increment': 66, 
    'stepTime': 2.15634697811618, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 66, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.16663330650997, 
    'attempts': 1, 'timeIncrement': 0.0102863283937928, 'increment': 67, 
    'stepTime': 2.16663330650997, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 67, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.18206279910066, 
    'attempts': 1, 'timeIncrement': 0.0154294925906893, 'increment': 68, 
    'stepTime': 2.18206279910066, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 68, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.2052070379867, 
    'attempts': 1, 'timeIncrement': 0.0231442388860339, 'increment': 69, 
    'stepTime': 2.2052070379867, 'step': 1, 'jobName': 'Job-1', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 69, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.23992339631575, 
    'attempts': 1, 'timeIncrement': 0.0347163583290509, 'increment': 70, 
    'stepTime': 2.23992339631575, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 70, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.29199793380933, 
    'attempts': 1, 'timeIncrement': 0.0520745374935763, 'increment': 71, 
    'stepTime': 2.29199793380933, 'step': 1, 'jobName': 'Job-1', 'severe': 16, 
    'iterations': 17, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 71, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.33105383692951, 
    'attempts': 1, 'timeIncrement': 0.0390559031201822, 'increment': 72, 
    'stepTime': 2.33105383692951, 'step': 1, 'jobName': 'Job-1', 'severe': 6, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 72, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.37010974004969, 
    'attempts': 1, 'timeIncrement': 0.0390559031201822, 'increment': 73, 
    'stepTime': 2.37010974004969, 'step': 1, 'jobName': 'Job-1', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 73, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.42869359472996, 
    'attempts': 1, 'timeIncrement': 0.0585838546802733, 'increment': 74, 
    'stepTime': 2.42869359472996, 'step': 1, 'jobName': 'Job-1', 'severe': 14, 
    'iterations': 15, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 74, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.47263148574017, 
    'attempts': 1, 'timeIncrement': 0.043937891010205, 'increment': 75, 
    'stepTime': 2.47263148574017, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 75, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.47263148574017, 
    'attempts': ' 1U', 'timeIncrement': 0.0329534182576537, 'increment': 76, 
    'stepTime': 2.47263148574017, 'step': 1, 'jobName': 'Job-1', 'severe': 9, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.48086984030458, 
    'attempts': 2, 'timeIncrement': 0.00823835456441344, 'increment': 76, 
    'stepTime': 2.48086984030458, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 76, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.48910819486899, 
    'attempts': 1, 'timeIncrement': 0.00823835456441344, 'increment': 77, 
    'stepTime': 2.48910819486899, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 77, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.50146572671561, 
    'attempts': 1, 'timeIncrement': 0.0123575318466202, 'increment': 78, 
    'stepTime': 2.50146572671561, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 78, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.50146572671561, 
    'attempts': ' 1U', 'timeIncrement': 0.0185362977699302, 'increment': 79, 
    'stepTime': 2.50146572671561, 'step': 1, 'jobName': 'Job-1', 'severe': 12, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.5060998011581, 
    'attempts': 2, 'timeIncrement': 0.00463407444248256, 'increment': 79, 
    'stepTime': 2.5060998011581, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 79, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.51305091282182, 
    'attempts': 1, 'timeIncrement': 0.00695111166372384, 'increment': 80, 
    'stepTime': 2.51305091282182, 'step': 1, 'jobName': 'Job-1', 'severe': 11, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 80, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.52347758031741, 
    'attempts': 1, 'timeIncrement': 0.0104266674955858, 'increment': 81, 
    'stepTime': 2.52347758031741, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 81, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.53911758156079, 
    'attempts': 1, 'timeIncrement': 0.0156400012433786, 'increment': 82, 
    'stepTime': 2.53911758156079, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 82, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.56257758342585, 
    'attempts': 1, 'timeIncrement': 0.0234600018650679, 'increment': 83, 
    'stepTime': 2.56257758342585, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 83, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.56257758342585, 
    'attempts': ' 1U', 'timeIncrement': 0.0351900027976019, 'increment': 84, 
    'stepTime': 2.56257758342585, 'step': 1, 'jobName': 'Job-1', 'severe': 24, 
    'iterations': 24, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.57137508412525, 
    'attempts': 2, 'timeIncrement': 0.00879750069940048, 'increment': 84, 
    'stepTime': 2.57137508412525, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 84, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.58457133517435, 
    'attempts': 1, 'timeIncrement': 0.0131962510491007, 'increment': 85, 
    'stepTime': 2.58457133517435, 'step': 1, 'jobName': 'Job-1', 'severe': 8, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 85, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.58457133517435, 
    'attempts': ' 1U', 'timeIncrement': 0.0197943765736511, 'increment': 86, 
    'stepTime': 2.58457133517435, 'step': 1, 'jobName': 'Job-1', 'severe': 12, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.58457133517435, 
    'attempts': ' 2U', 'timeIncrement': 0.00494859414341277, 'increment': 86, 
    'stepTime': 2.58457133517435, 'step': 1, 'jobName': 'Job-1', 'severe': 25, 
    'iterations': 25, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.58580848371021, 
    'attempts': 3, 'timeIncrement': 0.00123714853585319, 'increment': 86, 
    'stepTime': 2.58580848371021, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 86, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.58766420651399, 
    'attempts': 1, 'timeIncrement': 0.00185572280377979, 'increment': 87, 
    'stepTime': 2.58766420651399, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 87, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.59044779071966, 
    'attempts': 1, 'timeIncrement': 0.00278358420566968, 'increment': 88, 
    'stepTime': 2.59044779071966, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 88, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.59462316702816, 
    'attempts': 1, 'timeIncrement': 0.00417537630850453, 'increment': 89, 
    'stepTime': 2.59462316702816, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 89, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.60088623149092, 
    'attempts': 1, 'timeIncrement': 0.00626306446275679, 'increment': 90, 
    'stepTime': 2.60088623149092, 'step': 1, 'jobName': 'Job-1', 'severe': 1, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 90, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.61028082818505, 
    'attempts': 1, 'timeIncrement': 0.00939459669413518, 'increment': 91, 
    'stepTime': 2.61028082818505, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 91, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.62437272322626, 
    'attempts': 1, 'timeIncrement': 0.0140918950412028, 'increment': 92, 
    'stepTime': 2.62437272322626, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 92, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.64551056578806, 
    'attempts': 1, 'timeIncrement': 0.0211378425618042, 'increment': 93, 
    'stepTime': 2.64551056578806, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 93, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.67721732963077, 
    'attempts': 1, 'timeIncrement': 0.0317067638427062, 'increment': 94, 
    'stepTime': 2.67721732963077, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 94, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.72477747539483, 
    'attempts': 1, 'timeIncrement': 0.0475601457640594, 'increment': 95, 
    'stepTime': 2.72477747539483, 'step': 1, 'jobName': 'Job-1', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 95, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.79611769404092, 
    'attempts': 1, 'timeIncrement': 0.071340218646089, 'increment': 96, 
    'stepTime': 2.79611769404092, 'step': 1, 'jobName': 'Job-1', 'severe': 20, 
    'iterations': 20, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 96, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.79611769404092, 
    'attempts': ' 1U', 'timeIncrement': 0.0535051639845668, 'increment': 97, 
    'stepTime': 2.79611769404092, 'step': 1, 'jobName': 'Job-1', 'severe': 13, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.80949398503706, 
    'attempts': 2, 'timeIncrement': 0.0133762909961417, 'increment': 97, 
    'stepTime': 2.80949398503706, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 97, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.8228702760332, 
    'attempts': 1, 'timeIncrement': 0.0133762909961417, 'increment': 98, 
    'stepTime': 2.8228702760332, 'step': 1, 'jobName': 'Job-1', 'severe': 3, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 98, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.84293471252741, 
    'attempts': 1, 'timeIncrement': 0.0200644364942125, 'increment': 99, 
    'stepTime': 2.84293471252741, 'step': 1, 'jobName': 'Job-1', 'severe': 2, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 99, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.87303136726873, 
    'attempts': 1, 'timeIncrement': 0.0300966547413188, 'increment': 100, 
    'stepTime': 2.87303136726873, 'step': 1, 'jobName': 'Job-1', 'severe': 10, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 100, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many increments needed to complete the step', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
# Save by 1810151-AjoyKumarSar on 2024_09_16-01.20.08; build 2020 2019_09_13-23.49.31 163176
# Save by 1810151-AjoyKumarSar on 2024_09_16-01.20.08; build 2020 2019_09_13-23.49.31 163176
